(
    (include *standard-cl-23*)
    (include condition_codes.clib)

    (defconstant OFFER_MOD_HASH 0xcfbfdeed5c4ca2de3d0bf520b9cb4bb7743a359bd2e6a188d19ce7dffc21d3e7)

    ; takes a lisp tree and returns the hash of it
    (defun sha256tree (TREE)
        (if (l TREE)
            (sha256 2 (sha256tree (f TREE)) (sha256tree (r TREE)))
            (sha256 1 TREE)
        )
    )

    (defun calculate-rate (offer_mojos request_cat_mojos)
        (/ (* request_cat_mojos 1000000000000) offer_mojos)
    )

    (defun calculate-cat-mojos (RATE taken_mojos)
        (/ (* RATE taken_mojos) 1000000000000)
    )

    (defun calculate-fee-mojos (FEE_RATE taken_mojos)
        (/ (* FEE_RATE taken_mojos) 10000)
    )

    (defun assert-taker-announcement (MAKER_PH CAT_OFFER_HASH my_id request_cat_mojos)
        (let (
                (msg 
                    (sha256tree 
                        (list
                            my_id ; use coin_id as nonce
                            (list MAKER_PH request_cat_mojos (list MAKER_PH))
                        )
                    )
                ) 
            )
            (list ASSERT_PUZZLE_ANNOUNCEMENT (sha256 CAT_OFFER_HASH msg)) 
        )
    )

    (defun clawback (MAKER_PH MAKER_PK my_amount clawback_fee_mojos)
        (c
            (if (> clawback_fee_mojos 0)
                (list RESERVE_FEE clawback_fee_mojos)
                (list REMARK)
            )
            (list
                (list CREATE_COIN MAKER_PH (- my_amount clawback_fee_mojos))
                (list AGG_SIG_ME MAKER_PK (sha256 my_amount))
            ) 
        )
    )
)